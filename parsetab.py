
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPLUSPLUSMINUSMINUSleftPLUSMINUSleftTIMESDIVIDEMODrightPOWERAND BOOLEAN CASE CHAR CIN COMMA COUT DEQUAL DIVIDE DO DOUBLE ELSE END EQUAL FLOAT GREATER GREATEREQUAL ID IF INT INTEGER LBRACE LESS LESSEQUAL LPAREN MAIN MINUS MINUSMINUS MOD NEQUAL NUMBER OR PLUS PLUSPLUS POWER RBRACE RPAREN SEMICOLON STRING SWITCH TIMES WHILEprograma : MAIN LBRACE listaDeclaracion RBRACElistaDeclaracion : listaDeclaracion declaracion\n                        | declaraciondeclaracion : declaracionVariable\n                   | listaSentenciasdeclaracionVariable : tipo listaIdentificadores SEMICOLON\n                           | tipo ID EQUAL expresion SEMICOLONlistaIdentificadores : ID\n                            | ID COMMA listaIdentificadorestipo : INT\n            | INTEGER\n            | FLOAT\n            | CHAR\n            | STRING\n            | BOOLEAN\n            | DOUBLElistaSentencias : listaSentencias sentencia\n                       | sentencia\n                       | emptysentencia : seleccion\n                 | iteracion\n                 | repeticion\n                 | andor\n                 | elseif\n                 | sentIn\n                 | sentOut\n                 | asignacion\n                 | incrementoasignacion : ID EQUAL sentExpresion\n                  | ID DEQUAL sentExpresionincremento : ID PLUSPLUS SEMICOLON\n                  | ID MINUSMINUS SEMICOLONsentExpresion : expresion SEMICOLON\n                     | incremento SEMICOLON\n                     | SEMICOLONseleccion : IF expresion LBRACE listaSentencias RBRACE\n                 | IF expresion LBRACE listaSentencias RBRACE elseif\n                 | IF LPAREN andor RPAREN LBRACE listaSentencias RBRACE\n                 | IF LPAREN andor RPAREN LBRACE listaSentencias RBRACE elseifelseif : ELSE LBRACE listaSentencias RBRACEandor : expresion AND expresion\n             | expresion OR expresioniteracion : WHILE expresion\n                 | WHILE expresion LBRACE listaSentencias RBRACErepeticion : DO LBRACE listaSentencias RBRACE iteracionsentIn : CIN ID SEMICOLONsentOut : COUT expresion SEMICOLONexpresion : expresionSimple\n                 | expresionSimple relacionOp expresionSimplerelacionOp : LESS\n                  | LESSEQUAL\n                  | GREATER\n                  | GREATEREQUAL\n                  | DEQUAL\n                  | NEQUALexpresionSimple : expresionSimple sumaOp termino\n                       | terminosumaOp : PLUS\n              | MINUStermino : termino mulOp factor\n               | factormulOp : TIMES\n             | DIVIDE\n             | MODfactor : factor POWER primario\n              | primarioprimario : LPAREN expresion RPAREN\n                | ID\n                | NUMBERempty :'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,41,],[0,-1,]),'LBRACE':([2,32,33,36,37,38,39,40,52,54,56,92,98,99,100,101,108,],[3,57,58,-48,-57,-61,-66,-69,89,-68,93,-67,-49,-56,-60,-65,114,]),'INT':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[13,13,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'INTEGER':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[14,14,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'FLOAT':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[15,15,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'CHAR':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[16,16,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'STRING':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[17,17,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'BOOLEAN':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[18,18,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'DOUBLE':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,76,80,82,84,85,86,87,88,92,96,97,98,99,100,101,105,106,111,112,113,115,116,117,119,120,],[19,19,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-6,-29,-35,-30,-31,-32,-41,-42,-67,-46,-47,-49,-56,-60,-65,-33,-34,-40,-7,-36,-44,-45,-37,-38,-39,]),'IF':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[29,29,-3,-4,29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,29,29,-6,-29,-35,-30,-31,-32,-41,-42,29,-67,29,29,29,-46,-47,-49,-56,-60,-65,-33,-34,29,29,-40,-7,-36,29,-44,-45,-37,29,-38,-39,]),'WHILE':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,],[31,31,-3,-4,31,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,31,31,-6,-29,-35,-30,-31,-32,-41,-42,31,-67,31,31,31,-46,-47,-49,-56,-60,-65,-33,-34,31,31,31,-40,-7,-36,31,-44,-45,-37,31,-38,-39,]),'DO':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[32,32,-3,-4,32,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,32,32,-6,-29,-35,-30,-31,-32,-41,-42,32,-67,32,32,32,-46,-47,-49,-56,-60,-65,-33,-34,32,32,-40,-7,-36,32,-44,-45,-37,32,-38,-39,]),'ELSE':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[33,33,-3,-4,33,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,33,33,-6,-29,-35,-30,-31,-32,-41,-42,33,-67,33,33,33,-46,-47,-49,-56,-60,-65,-33,-34,33,33,-40,-7,33,33,-44,-45,-37,33,33,-39,]),'CIN':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[34,34,-3,-4,34,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,34,34,-6,-29,-35,-30,-31,-32,-41,-42,34,-67,34,34,34,-46,-47,-49,-56,-60,-65,-33,-34,34,34,-40,-7,-36,34,-44,-45,-37,34,-38,-39,]),'COUT':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[35,35,-3,-4,35,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,35,35,-6,-29,-35,-30,-31,-32,-41,-42,35,-67,35,35,35,-46,-47,-49,-56,-60,-65,-33,-34,35,35,-40,-7,-36,35,-44,-45,-37,35,-38,-39,]),'ID':([3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,42,43,46,47,50,51,53,54,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[9,9,-3,-4,9,45,-18,-19,-10,-11,-12,-13,-14,-15,-16,-20,-21,-22,-23,-24,-25,-26,-27,-28,54,54,54,59,54,-48,-57,-61,-66,-69,-2,-17,79,79,54,54,54,-68,-43,9,9,54,54,-50,-51,-52,-53,-54,-55,-58,-59,54,-62,-63,-64,54,-6,54,103,-29,-35,-30,-31,-32,-41,-42,9,-67,9,9,9,-46,-47,-49,-56,-60,-65,-33,-34,9,9,-40,-7,-36,9,-44,-45,-37,9,-38,-39,]),'LPAREN':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,42,43,46,47,50,51,53,54,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[30,30,-3,-4,30,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,53,30,30,30,-48,-57,-61,-66,-69,-2,-17,30,30,30,30,30,-68,-43,30,30,30,30,-50,-51,-52,-53,-54,-55,-58,-59,30,-62,-63,-64,30,-6,30,-29,-35,-30,-31,-32,-41,-42,30,-67,30,30,30,-46,-47,-49,-56,-60,-65,-33,-34,30,30,-40,-7,-36,30,-44,-45,-37,30,-38,-39,]),'NUMBER':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,42,43,46,47,50,51,53,54,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[40,40,-3,-4,40,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,40,40,40,40,-48,-57,-61,-66,-69,-2,-17,40,40,40,40,40,-68,-43,40,40,40,40,-50,-51,-52,-53,-54,-55,-58,-59,40,-62,-63,-64,40,-6,40,-29,-35,-30,-31,-32,-41,-42,40,-67,40,40,40,-46,-47,-49,-56,-60,-65,-33,-34,40,40,-40,-7,-36,40,-44,-45,-37,40,-38,-39,]),'RBRACE':([3,4,5,6,7,11,12,20,21,22,23,24,25,26,27,28,36,37,38,39,40,42,43,54,56,57,58,76,80,82,84,85,86,87,88,89,92,93,94,95,96,97,98,99,100,101,105,106,107,109,111,112,113,114,115,116,117,118,119,120,],[-70,41,-3,-4,-5,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-48,-57,-61,-66,-69,-2,-17,-68,-43,-70,-70,-6,-29,-35,-30,-31,-32,-41,-42,-70,-67,-70,110,111,-46,-47,-49,-56,-60,-65,-33,-34,113,115,-40,-7,-36,-70,-44,-45,-37,119,-38,-39,]),'EQUAL':([9,45,],[46,77,]),'DEQUAL':([9,36,37,38,39,40,54,79,92,99,100,101,],[47,67,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'PLUSPLUS':([9,79,],[48,48,]),'MINUSMINUS':([9,79,],[49,49,]),'POWER':([9,38,39,40,54,79,92,100,101,],[-68,75,-66,-69,-68,-68,-67,75,-65,]),'TIMES':([9,37,38,39,40,54,79,92,99,100,101,],[-68,72,-61,-66,-69,-68,-68,-67,72,-60,-65,]),'DIVIDE':([9,37,38,39,40,54,79,92,99,100,101,],[-68,73,-61,-66,-69,-68,-68,-67,73,-60,-65,]),'MOD':([9,37,38,39,40,54,79,92,99,100,101,],[-68,74,-61,-66,-69,-68,-68,-67,74,-60,-65,]),'LESS':([9,36,37,38,39,40,54,79,92,99,100,101,],[-68,63,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'LESSEQUAL':([9,36,37,38,39,40,54,79,92,99,100,101,],[-68,64,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'GREATER':([9,36,37,38,39,40,54,79,92,99,100,101,],[-68,65,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'GREATEREQUAL':([9,36,37,38,39,40,54,79,92,99,100,101,],[-68,66,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'NEQUAL':([9,36,37,38,39,40,54,79,92,99,100,101,],[-68,68,-57,-61,-66,-69,-68,-68,-67,-56,-60,-65,]),'PLUS':([9,36,37,38,39,40,54,79,92,98,99,100,101,],[-68,69,-57,-61,-66,-69,-68,-68,-67,69,-56,-60,-65,]),'MINUS':([9,36,37,38,39,40,54,79,92,98,99,100,101,],[-68,70,-57,-61,-66,-69,-68,-68,-67,70,-56,-60,-65,]),'AND':([9,10,36,37,38,39,40,54,91,92,98,99,100,101,],[-68,50,-48,-57,-61,-66,-69,-68,50,-67,-49,-56,-60,-65,]),'OR':([9,10,36,37,38,39,40,54,91,92,98,99,100,101,],[-68,51,-48,-57,-61,-66,-69,-68,51,-67,-49,-56,-60,-65,]),'RPAREN':([36,37,38,39,40,54,55,87,88,90,91,92,98,99,100,101,],[-48,-57,-61,-66,-69,-68,92,-41,-42,108,92,-67,-49,-56,-60,-65,]),'SEMICOLON':([36,37,38,39,40,44,45,46,47,48,49,54,59,60,79,81,83,85,86,92,98,99,100,101,102,103,104,],[-48,-57,-61,-66,-69,76,-8,82,82,85,86,-68,96,97,-68,105,106,-31,-32,-67,-49,-56,-60,-65,112,-8,-9,]),'COMMA':([45,103,],[78,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'listaDeclaracion':([3,],[4,]),'declaracion':([3,4,],[5,42,]),'declaracionVariable':([3,4,],[6,6,]),'listaSentencias':([3,4,57,58,89,93,114,],[7,7,94,95,107,109,118,]),'tipo':([3,4,],[8,8,]),'expresion':([3,4,7,29,30,31,35,46,47,50,51,53,57,58,77,89,93,94,95,107,109,114,118,],[10,10,10,52,55,56,60,81,81,87,88,91,10,10,102,10,10,10,10,10,10,10,10,]),'sentencia':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[11,11,43,11,11,11,11,43,43,43,43,11,43,]),'empty':([3,4,57,58,89,93,114,],[12,12,12,12,12,12,12,]),'seleccion':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'iteracion':([3,4,7,57,58,89,93,94,95,107,109,110,114,118,],[21,21,21,21,21,21,21,21,21,21,21,116,21,21,]),'repeticion':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'andor':([3,4,7,53,57,58,89,93,94,95,107,109,114,118,],[23,23,23,90,23,23,23,23,23,23,23,23,23,23,]),'elseif':([3,4,7,57,58,89,93,94,95,107,109,113,114,118,119,],[24,24,24,24,24,24,24,24,24,24,24,117,24,24,120,]),'sentIn':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'sentOut':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacion':([3,4,7,57,58,89,93,94,95,107,109,114,118,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'incremento':([3,4,7,46,47,57,58,89,93,94,95,107,109,114,118,],[28,28,28,83,83,28,28,28,28,28,28,28,28,28,28,]),'expresionSimple':([3,4,7,29,30,31,35,46,47,50,51,53,57,58,61,77,89,93,94,95,107,109,114,118,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,98,36,36,36,36,36,36,36,36,36,]),'termino':([3,4,7,29,30,31,35,46,47,50,51,53,57,58,61,62,77,89,93,94,95,107,109,114,118,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,99,37,37,37,37,37,37,37,37,37,]),'factor':([3,4,7,29,30,31,35,46,47,50,51,53,57,58,61,62,71,77,89,93,94,95,107,109,114,118,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,100,38,38,38,38,38,38,38,38,38,]),'primario':([3,4,7,29,30,31,35,46,47,50,51,53,57,58,61,62,71,75,77,89,93,94,95,107,109,114,118,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,101,39,39,39,39,39,39,39,39,39,]),'listaIdentificadores':([8,78,],[44,104,]),'relacionOp':([36,],[61,]),'sumaOp':([36,98,],[62,62,]),'mulOp':([37,99,],[71,71,]),'sentExpresion':([46,47,],[80,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MAIN LBRACE listaDeclaracion RBRACE','programa',4,'p_programa','sintactic.py',90),
  ('listaDeclaracion -> listaDeclaracion declaracion','listaDeclaracion',2,'p_listaDeclaracion','sintactic.py',94),
  ('listaDeclaracion -> declaracion','listaDeclaracion',1,'p_listaDeclaracion','sintactic.py',95),
  ('declaracion -> declaracionVariable','declaracion',1,'p_declaracion','sintactic.py',102),
  ('declaracion -> listaSentencias','declaracion',1,'p_declaracion','sintactic.py',103),
  ('declaracionVariable -> tipo listaIdentificadores SEMICOLON','declaracionVariable',3,'p_declaracionVariable','sintactic.py',107),
  ('declaracionVariable -> tipo ID EQUAL expresion SEMICOLON','declaracionVariable',5,'p_declaracionVariable','sintactic.py',108),
  ('listaIdentificadores -> ID','listaIdentificadores',1,'p_listaIdentificadores','sintactic.py',115),
  ('listaIdentificadores -> ID COMMA listaIdentificadores','listaIdentificadores',3,'p_listaIdentificadores','sintactic.py',116),
  ('tipo -> INT','tipo',1,'p_tipo','sintactic.py',123),
  ('tipo -> INTEGER','tipo',1,'p_tipo','sintactic.py',124),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintactic.py',125),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintactic.py',126),
  ('tipo -> STRING','tipo',1,'p_tipo','sintactic.py',127),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','sintactic.py',128),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintactic.py',129),
  ('listaSentencias -> listaSentencias sentencia','listaSentencias',2,'p_listaSentencias','sintactic.py',133),
  ('listaSentencias -> sentencia','listaSentencias',1,'p_listaSentencias','sintactic.py',134),
  ('listaSentencias -> empty','listaSentencias',1,'p_listaSentencias','sintactic.py',135),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','sintactic.py',144),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','sintactic.py',145),
  ('sentencia -> repeticion','sentencia',1,'p_sentencia','sintactic.py',146),
  ('sentencia -> andor','sentencia',1,'p_sentencia','sintactic.py',147),
  ('sentencia -> elseif','sentencia',1,'p_sentencia','sintactic.py',148),
  ('sentencia -> sentIn','sentencia',1,'p_sentencia','sintactic.py',149),
  ('sentencia -> sentOut','sentencia',1,'p_sentencia','sintactic.py',150),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactic.py',151),
  ('sentencia -> incremento','sentencia',1,'p_sentencia','sintactic.py',152),
  ('asignacion -> ID EQUAL sentExpresion','asignacion',3,'p_asignacion','sintactic.py',156),
  ('asignacion -> ID DEQUAL sentExpresion','asignacion',3,'p_asignacion','sintactic.py',157),
  ('incremento -> ID PLUSPLUS SEMICOLON','incremento',3,'p_incremento','sintactic.py',161),
  ('incremento -> ID MINUSMINUS SEMICOLON','incremento',3,'p_incremento','sintactic.py',162),
  ('sentExpresion -> expresion SEMICOLON','sentExpresion',2,'p_sentExpresion','sintactic.py',169),
  ('sentExpresion -> incremento SEMICOLON','sentExpresion',2,'p_sentExpresion','sintactic.py',170),
  ('sentExpresion -> SEMICOLON','sentExpresion',1,'p_sentExpresion','sintactic.py',171),
  ('seleccion -> IF expresion LBRACE listaSentencias RBRACE','seleccion',5,'p_seleccion','sintactic.py',178),
  ('seleccion -> IF expresion LBRACE listaSentencias RBRACE elseif','seleccion',6,'p_seleccion','sintactic.py',179),
  ('seleccion -> IF LPAREN andor RPAREN LBRACE listaSentencias RBRACE','seleccion',7,'p_seleccion','sintactic.py',180),
  ('seleccion -> IF LPAREN andor RPAREN LBRACE listaSentencias RBRACE elseif','seleccion',8,'p_seleccion','sintactic.py',181),
  ('elseif -> ELSE LBRACE listaSentencias RBRACE','elseif',4,'p_elseif','sintactic.py',194),
  ('andor -> expresion AND expresion','andor',3,'p_andor','sintactic.py',198),
  ('andor -> expresion OR expresion','andor',3,'p_andor','sintactic.py',199),
  ('iteracion -> WHILE expresion','iteracion',2,'p_iteracion','sintactic.py',203),
  ('iteracion -> WHILE expresion LBRACE listaSentencias RBRACE','iteracion',5,'p_iteracion','sintactic.py',204),
  ('repeticion -> DO LBRACE listaSentencias RBRACE iteracion','repeticion',5,'p_repeticion','sintactic.py',211),
  ('sentIn -> CIN ID SEMICOLON','sentIn',3,'p_sentIn','sintactic.py',215),
  ('sentOut -> COUT expresion SEMICOLON','sentOut',3,'p_sentOut','sintactic.py',219),
  ('expresion -> expresionSimple','expresion',1,'p_expresion','sintactic.py',223),
  ('expresion -> expresionSimple relacionOp expresionSimple','expresion',3,'p_expresion','sintactic.py',224),
  ('relacionOp -> LESS','relacionOp',1,'p_relacionOp','sintactic.py',231),
  ('relacionOp -> LESSEQUAL','relacionOp',1,'p_relacionOp','sintactic.py',232),
  ('relacionOp -> GREATER','relacionOp',1,'p_relacionOp','sintactic.py',233),
  ('relacionOp -> GREATEREQUAL','relacionOp',1,'p_relacionOp','sintactic.py',234),
  ('relacionOp -> DEQUAL','relacionOp',1,'p_relacionOp','sintactic.py',235),
  ('relacionOp -> NEQUAL','relacionOp',1,'p_relacionOp','sintactic.py',236),
  ('expresionSimple -> expresionSimple sumaOp termino','expresionSimple',3,'p_expresionSimple','sintactic.py',240),
  ('expresionSimple -> termino','expresionSimple',1,'p_expresionSimple','sintactic.py',241),
  ('sumaOp -> PLUS','sumaOp',1,'p_sumaOp','sintactic.py',248),
  ('sumaOp -> MINUS','sumaOp',1,'p_sumaOp','sintactic.py',249),
  ('termino -> termino mulOp factor','termino',3,'p_termino','sintactic.py',253),
  ('termino -> factor','termino',1,'p_termino','sintactic.py',254),
  ('mulOp -> TIMES','mulOp',1,'p_mulOp','sintactic.py',261),
  ('mulOp -> DIVIDE','mulOp',1,'p_mulOp','sintactic.py',262),
  ('mulOp -> MOD','mulOp',1,'p_mulOp','sintactic.py',263),
  ('factor -> factor POWER primario','factor',3,'p_factor','sintactic.py',267),
  ('factor -> primario','factor',1,'p_factor','sintactic.py',268),
  ('primario -> LPAREN expresion RPAREN','primario',3,'p_primario','sintactic.py',275),
  ('primario -> ID','primario',1,'p_primario','sintactic.py',276),
  ('primario -> NUMBER','primario',1,'p_primario','sintactic.py',277),
  ('empty -> <empty>','empty',0,'p_empty','sintactic.py',284),
]
